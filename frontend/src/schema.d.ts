/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/jwt/login": {
    /** Auth:Jwt.Login */
    post: operations["auth_jwt_login_auth_jwt_login_post"];
  };
  "/auth/jwt/logout": {
    /** Auth:Jwt.Logout */
    post: operations["auth_jwt_logout_auth_jwt_logout_post"];
  };
  "/auth/register": {
    /** Register:Register */
    post: operations["register_register_auth_register_post"];
  };
  "/auth/forgot-password": {
    /** Reset:Forgot Password */
    post: operations["reset_forgot_password_auth_forgot_password_post"];
  };
  "/auth/reset-password": {
    /** Reset:Reset Password */
    post: operations["reset_reset_password_auth_reset_password_post"];
  };
  "/auth/request-verify-token": {
    /** Verify:Request-Token */
    post: operations["verify_request_token_auth_request_verify_token_post"];
  };
  "/auth/verify": {
    /** Verify:Verify */
    post: operations["verify_verify_auth_verify_post"];
  };
  "/users/me": {
    /** Users:Current User */
    get: operations["users_current_user_users_me_get"];
    /** Users:Patch Current User */
    patch: operations["users_patch_current_user_users_me_patch"];
  };
  "/users/{id}": {
    /** Users:User */
    get: operations["users_user_users__id__get"];
    /** Users:Delete User */
    delete: operations["users_delete_user_users__id__delete"];
    /** Users:Patch User */
    patch: operations["users_patch_user_users__id__patch"];
  };
  "/leads/": {
    /** Read Leads */
    get: operations["read_leads_leads__get"];
    /** Create Lead */
    post: operations["create_lead_leads__post"];
  };
  "/leads/{id}/": {
    /** Read Lead */
    get: operations["read_lead_leads__id___get"];
    /** Delete Lead */
    delete: operations["delete_lead_leads__id___delete"];
  };
  "/etl/": {
    /**
     * Read Etl Events
     * @description Read all ETL events.
     */
    get: operations["read_etl_events_etl__get"];
    /**
     * Create Etl Event
     * @description Create an ETL event.
     */
    post: operations["create_etl_event_etl__post"];
  };
  "/etl/{id}/": {
    /**
     * Read Etl Event
     * @description Read an ETL event.
     */
    get: operations["read_etl_event_etl__id___get"];
  };
  "/etl/leads/": {
    /** Leads Etl Event */
    post: operations["leads_etl_event_etl_leads__post"];
  };
  "/ping": {
    /** Pong */
    get: operations["pong_ping_get"];
  };
  "/": {
    /** Root */
    get: operations["root__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** BearerResponse */
    BearerResponse: {
      /** Access Token */
      access_token: string;
      /** Token Type */
      token_type: string;
    };
    /** Body_auth_jwt_login_auth_jwt_login_post */
    Body_auth_jwt_login_auth_jwt_login_post: {
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** Body_reset_forgot_password_auth_forgot_password_post */
    Body_reset_forgot_password_auth_forgot_password_post: {
      /**
       * Email
       * Format: email
       */
      email: string;
    };
    /** Body_reset_reset_password_auth_reset_password_post */
    Body_reset_reset_password_auth_reset_password_post: {
      /** Token */
      token: string;
      /** Password */
      password: string;
    };
    /** Body_verify_request_token_auth_request_verify_token_post */
    Body_verify_request_token_auth_request_verify_token_post: {
      /**
       * Email
       * Format: email
       */
      email: string;
    };
    /** Body_verify_verify_auth_verify_post */
    Body_verify_verify_auth_verify_post: {
      /** Token */
      token: string;
    };
    /** ETLEventCreate */
    ETLEventCreate: {
      /** Job Name */
      job_name?: string | null;
      /** Status */
      status?: string | null;
    };
    /** ETLEventRead */
    ETLEventRead: {
      /** Id */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string;
      /** Job Name */
      job_name?: string | null;
      /** Status */
      status?: string | null;
    };
    /** ErrorModel */
    ErrorModel: {
      /** Detail */
      detail: string | {
        [key: string]: string;
      };
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LeadCreate */
    LeadCreate: {
      /** Title */
      title?: string | null;
      /** Company */
      company?: string | null;
      /** Description */
      description?: string | null;
      /** Location */
      location?: string | null;
      /** Salary */
      salary?: string | null;
      /** Job Function */
      job_function?: string | null;
      /** Industries */
      industries?: string | null;
      /** Employment Type */
      employment_type?: string | null;
      /** Seniority Level */
      seniority_level?: string | null;
      /** Notes */
      notes?: string | null;
      /** Url */
      url: string;
    };
    /** LeadRead */
    LeadRead: {
      /** Id */
      id: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at: string;
      /** Title */
      title?: string | null;
      /** Company */
      company?: string | null;
      /** Description */
      description?: string | null;
      /** Location */
      location?: string | null;
      /** Salary */
      salary?: string | null;
      /** Job Function */
      job_function?: string | null;
      /** Industries */
      industries?: string | null;
      /** Employment Type */
      employment_type?: string | null;
      /** Seniority Level */
      seniority_level?: string | null;
      /** Notes */
      notes?: string | null;
      /** Url */
      url: string;
    };
    /** UserCreate */
    UserCreate: {
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      /** Phone Number */
      phone_number?: string | null;
      /** Address Line 1 */
      address_line_1?: string | null;
      /** Address Line 2 */
      address_line_2?: string | null;
      /** City */
      city?: string | null;
      /** State */
      state?: string | null;
      /** Zip Code */
      zip_code?: string | null;
      /** Country */
      country?: string | null;
      /** Skills */
      skills?: string | null;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
      /**
       * Is Active
       * @default true
       */
      is_active?: boolean | null;
      /**
       * Is Superuser
       * @default false
       */
      is_superuser?: boolean | null;
      /**
       * Is Verified
       * @default false
       */
      is_verified?: boolean | null;
    };
    /** UserRead */
    UserRead: {
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      /** Phone Number */
      phone_number?: string | null;
      /** Address Line 1 */
      address_line_1?: string | null;
      /** Address Line 2 */
      address_line_2?: string | null;
      /** City */
      city?: string | null;
      /** State */
      state?: string | null;
      /** Zip Code */
      zip_code?: string | null;
      /** Country */
      country?: string | null;
      /** Skills */
      skills?: string | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Email
       * Format: email
       */
      email: string;
      /**
       * Is Active
       * @default true
       */
      is_active?: boolean;
      /**
       * Is Superuser
       * @default false
       */
      is_superuser?: boolean;
      /**
       * Is Verified
       * @default false
       */
      is_verified?: boolean;
    };
    /** UserUpdate */
    UserUpdate: {
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      /** Phone Number */
      phone_number?: string | null;
      /** Address Line 1 */
      address_line_1?: string | null;
      /** Address Line 2 */
      address_line_2?: string | null;
      /** City */
      city?: string | null;
      /** State */
      state?: string | null;
      /** Zip Code */
      zip_code?: string | null;
      /** Country */
      country?: string | null;
      /** Skills */
      skills?: string | null;
      /** Password */
      password?: string | null;
      /** Email */
      email?: string | null;
      /** Is Active */
      is_active?: boolean | null;
      /** Is Superuser */
      is_superuser?: boolean | null;
      /** Is Verified */
      is_verified?: boolean | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Auth:Jwt.Login */
  auth_jwt_login_auth_jwt_login_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_auth_jwt_login_auth_jwt_login_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BearerResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Auth:Jwt.Logout */
  auth_jwt_logout_auth_jwt_logout_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
    };
  };
  /** Register:Register */
  register_register_auth_register_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reset:Forgot Password */
  reset_forgot_password_auth_forgot_password_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_reset_forgot_password_auth_forgot_password_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reset:Reset Password */
  reset_reset_password_auth_reset_password_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_reset_reset_password_auth_reset_password_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Verify:Request-Token */
  verify_request_token_auth_request_verify_token_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_verify_request_token_auth_request_verify_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Verify:Verify */
  verify_verify_auth_verify_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_verify_verify_auth_verify_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Current User */
  users_current_user_users_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
    };
  };
  /** Users:Patch Current User */
  users_patch_current_user_users_me_patch: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:User */
  users_user_users__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Delete User */
  users_delete_user_users__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Patch User */
  users_patch_user_users__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Leads */
  read_leads_leads__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LeadRead"][];
        };
      };
    };
  };
  /** Create Lead */
  create_lead_leads__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeadCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Lead */
  read_lead_leads__id___get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": components["schemas"]["LeadRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Lead */
  delete_lead_leads__id___delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Read Etl Events
   * @description Read all ETL events.
   */
  read_etl_events_etl__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ETLEventRead"][];
        };
      };
    };
  };
  /**
   * Create Etl Event
   * @description Create an ETL event.
   */
  create_etl_event_etl__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ETLEventCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Read Etl Event
   * @description Read an ETL event.
   */
  read_etl_event_etl__id___get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": components["schemas"]["ETLEventRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Leads Etl Event */
  leads_etl_event_etl_leads__post: {
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Pong */
  pong_ping_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Root */
  root__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}

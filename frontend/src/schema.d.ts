/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/jwt/login": {
    /** Auth:Jwt.Login */
    post: operations["auth_jwt_login_auth_jwt_login_post"];
  };
  "/auth/jwt/logout": {
    /** Auth:Jwt.Logout */
    post: operations["auth_jwt_logout_auth_jwt_logout_post"];
  };
  "/auth/register": {
    /** Register:Register */
    post: operations["register_register_auth_register_post"];
  };
  "/auth/forgot-password": {
    /** Reset:Forgot Password */
    post: operations["reset_forgot_password_auth_forgot_password_post"];
  };
  "/auth/reset-password": {
    /** Reset:Reset Password */
    post: operations["reset_reset_password_auth_reset_password_post"];
  };
  "/auth/request-verify-token": {
    /** Verify:Request-Token */
    post: operations["verify_request_token_auth_request_verify_token_post"];
  };
  "/auth/verify": {
    /** Verify:Verify */
    post: operations["verify_verify_auth_verify_post"];
  };
  "/users/me": {
    /** Users:Current User */
    get: operations["users_current_user_users_me_get"];
    /** Users:Patch Current User */
    patch: operations["users_patch_current_user_users_me_patch"];
  };
  "/users/{id}": {
    /** Users:User */
    get: operations["users_user_users__id__get"];
    /** Users:Delete User */
    delete: operations["users_delete_user_users__id__delete"];
    /** Users:Patch User */
    patch: operations["users_patch_user_users__id__patch"];
  };
  "/users/me/profile": {
    /** Read Profile */
    get: operations["read_profile_users_me_profile_get"];
  };
  "/leads/load_database": {
    /**
     * Load Database
     * @description Loads the database with leads from the data lake.
     */
    post: operations["load_database_leads_load_database_post"];
  };
  "/leads/": {
    /** Read Leads */
    get: operations["read_leads_leads__get"];
    /** Create Lead */
    post: operations["create_lead_leads__post"];
  };
  "/leads/{id}": {
    /** Read Lead */
    get: operations["read_lead_leads__id__get"];
    /** Delete Lead */
    delete: operations["delete_lead_leads__id__delete"];
    /** Update Lead */
    patch: operations["update_lead_leads__id__patch"];
  };
  "/leads/purge": {
    /**
     * Purge Leads
     * @description Drops all leads records in the table.
     */
    delete: operations["purge_leads_leads_purge_delete"];
  };
  "/data_orchestration/events": {
    /** Read Orch Events */
    get: operations["read_orch_events_data_orchestration_events_get"];
  };
  "/data_orchestration/events/success": {
    /** Read Successful Orch Events */
    get: operations["read_successful_orch_events_data_orchestration_events_success_get"];
  };
  "/data_orchestration/events/failure": {
    /** Read Failed Orch Events */
    get: operations["read_failed_orch_events_data_orchestration_events_failure_get"];
  };
  "/data_orchestration/events/{id}": {
    /** Read Orch Event */
    get: operations["read_orch_event_data_orchestration_events__id__get"];
  };
  "/contacts/": {
    /** Get Current User Contacts */
    get: operations["get_current_user_contacts_contacts__get"];
    /** Create User Contact */
    post: operations["create_user_contact_contacts__post"];
  };
  "/contacts/{contact_id}": {
    /** Get User Contact */
    get: operations["get_user_contact_contacts__contact_id__get"];
    /** Update User Contact */
    put: operations["update_user_contact_contacts__contact_id__put"];
    /** Delete User Contact */
    delete: operations["delete_user_contact_contacts__contact_id__delete"];
  };
  "/experiences/": {
    /** Read Current User Experiences */
    get: operations["read_current_user_experiences_experiences__get"];
    /** Create User Experience */
    post: operations["create_user_experience_experiences__post"];
  };
  "/experiences/{experience_id}": {
    /** Read User Experience */
    get: operations["read_user_experience_experiences__experience_id__get"];
    /** Update User Experience */
    put: operations["update_user_experience_experiences__experience_id__put"];
    /** Delete User Experience */
    delete: operations["delete_user_experience_experiences__experience_id__delete"];
  };
  "/skills/": {
    /** Get Current User Skills */
    get: operations["get_current_user_skills_skills__get"];
    /** Create User Skill */
    post: operations["create_user_skill_skills__post"];
  };
  "/skills/{skill_id}": {
    /** Get User Skill */
    get: operations["get_user_skill_skills__skill_id__get"];
    /** Update User Skill */
    put: operations["update_user_skill_skills__skill_id__put"];
    /** Delete User Skill */
    delete: operations["delete_user_skill_skills__skill_id__delete"];
  };
  "/cover_letters/generate": {
    /** Generate User Cover Letter */
    post: operations["generate_user_cover_letter_cover_letters_generate_post"];
  };
  "/cover_letters/": {
    /** Get Current User Cover Letters */
    get: operations["get_current_user_cover_letters_cover_letters__get"];
    /** Create User Cover Letter */
    post: operations["create_user_cover_letter_cover_letters__post"];
  };
  "/cover_letters/{cover_letter_id}": {
    /** Get Cover Letter By Id */
    get: operations["get_cover_letter_by_id_cover_letters__cover_letter_id__get"];
    /** Delete User Cover Letter */
    delete: operations["delete_user_cover_letter_cover_letters__cover_letter_id__delete"];
    /** Update User Cover Letter */
    patch: operations["update_user_cover_letter_cover_letters__cover_letter_id__patch"];
  };
  "/resumes/": {
    /** Get Current User Resumes */
    get: operations["get_current_user_resumes_resumes__get"];
    /** Create User Resume */
    post: operations["create_user_resume_resumes__post"];
  };
  "/resumes/{resume_id}": {
    /** Get User Resume */
    get: operations["get_user_resume_resumes__resume_id__get"];
    /** Delete User Resume */
    delete: operations["delete_user_resume_resumes__resume_id__delete"];
    /** Update User Resume */
    patch: operations["update_user_resume_resumes__resume_id__patch"];
  };
  "/applications/": {
    /**
     * Get Applications
     * @description Get all applications for the current user.
     */
    get: operations["get_applications_applications__get"];
    /** Create Application */
    post: operations["create_application_applications__post"];
  };
  "/applications/{id}": {
    /** Delete Application */
    delete: operations["delete_application_applications__id__delete"];
    /** Update Application */
    patch: operations["update_application_applications__id__patch"];
  };
  "/applications/{id}/resumes": {
    /** Get Application Resumes */
    get: operations["get_application_resumes_applications__id__resumes_get"];
    /** Add Resume To Application */
    post: operations["add_resume_to_application_applications__id__resumes_post"];
  };
  "/applications/{id}/cover_letters": {
    /** Get Application Cover Letters */
    get: operations["get_application_cover_letters_applications__id__cover_letters_get"];
    /** Add Cover Letter To Application */
    post: operations["add_cover_letter_to_application_applications__id__cover_letters_post"];
  };
  "/applications/{id}/cover_letters/generate": {
    /** Generate Cover Letter For Application */
    post: operations["generate_cover_letter_for_application_applications__id__cover_letters_generate_post"];
  };
  "/education/": {
    /** Read Current User Educations */
    get: operations["read_current_user_educations_education__get"];
    /** Create User Education */
    post: operations["create_user_education_education__post"];
  };
  "/education/{education_id}": {
    /** Read User Education */
    get: operations["read_user_education_education__education_id__get"];
    /** Update User Education */
    put: operations["update_user_education_education__education_id__put"];
    /** Delete User Education */
    delete: operations["delete_user_education_education__education_id__delete"];
  };
  "/certificate/": {
    /** Read Current User Certificates */
    get: operations["read_current_user_certificates_certificate__get"];
    /** Create User Certificate */
    post: operations["create_user_certificate_certificate__post"];
  };
  "/certificate/{certificate_id}": {
    /** Read User Certificate */
    get: operations["read_user_certificate_certificate__certificate_id__get"];
    /** Update User Certificate */
    put: operations["update_user_certificate_certificate__certificate_id__put"];
    /** Delete User Certificate */
    delete: operations["delete_user_certificate_certificate__certificate_id__delete"];
  };
  "/ping": {
    /** Pong */
    get: operations["pong_ping_get"];
  };
  "/": {
    /** Root */
    get: operations["root__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** ApplicationCreate */
    ApplicationCreate: {
      /**
       * Lead Id
       * Format: uuid4
       */
      lead_id: string;
      /** Status */
      status: string;
    };
    /** ApplicationRead */
    ApplicationRead: {
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * Lead Id
       * Format: uuid4
       */
      lead_id: string;
      /**
       * User Id
       * Format: uuid4
       */
      user_id: string;
      lead: components["schemas"]["LeadRead"];
      user: components["schemas"]["UserRead"];
      /**
       * Status
       * @description Application status
       */
      status?: string | null;
    };
    /** ApplicationUpdate */
    ApplicationUpdate: {
      /** Status */
      status: string;
    };
    /** BearerResponse */
    BearerResponse: {
      /** Access Token */
      access_token: string;
      /** Token Type */
      token_type: string;
    };
    /** Body_auth_jwt_login_auth_jwt_login_post */
    Body_auth_jwt_login_auth_jwt_login_post: {
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** Body_reset_forgot_password_auth_forgot_password_post */
    Body_reset_forgot_password_auth_forgot_password_post: {
      /**
       * Email
       * Format: email
       */
      email: string;
    };
    /** Body_reset_reset_password_auth_reset_password_post */
    Body_reset_reset_password_auth_reset_password_post: {
      /** Token */
      token: string;
      /** Password */
      password: string;
    };
    /** Body_verify_request_token_auth_request_verify_token_post */
    Body_verify_request_token_auth_request_verify_token_post: {
      /**
       * Email
       * Format: email
       */
      email: string;
    };
    /** Body_verify_verify_auth_verify_post */
    Body_verify_verify_auth_verify_post: {
      /** Token */
      token: string;
    };
    /** CertificateCreate */
    CertificateCreate: {
      /**
       * Title
       * @description Certificate title
       */
      title?: string | null;
      /**
       * Issuer
       * @description Issuer of the certificate
       */
      issuer?: string | null;
      /**
       * Expiration Date
       * @description Expiration date of the certificate
       */
      expiration_date?: string | null;
      /**
       * Issued Date
       * @description Issued date of the certificate
       */
      issued_date?: string | null;
    };
    /** CertificateRead */
    CertificateRead: {
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * Title
       * @description Certificate title
       */
      title?: string | null;
      /**
       * Issuer
       * @description Issuer of the certificate
       */
      issuer?: string | null;
      /**
       * Expiration Date
       * @description Expiration date of the certificate
       */
      expiration_date?: string | null;
      /**
       * Issued Date
       * @description Issued date of the certificate
       */
      issued_date?: string | null;
    };
    /** CertificateUpdate */
    CertificateUpdate: {
      /**
       * Title
       * @description Certificate title
       */
      title?: string | null;
      /**
       * Issuer
       * @description Issuer of the certificate
       */
      issuer?: string | null;
      /**
       * Expiration Date
       * @description Expiration date of the certificate
       */
      expiration_date?: string | null;
      /**
       * Issued Date
       * @description Issued date of the certificate
       */
      issued_date?: string | null;
    };
    /** ContactCreate */
    ContactCreate: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Email
       * @description Email address
       */
      email?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
    };
    /** ContactRead */
    ContactRead: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Email
       * @description Email address
       */
      email?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
    };
    /** ContactUpdate */
    ContactUpdate: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Email
       * @description Email address
       */
      email?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
    };
    /**
     * ContentType
     * @enum {string}
     */
    ContentType: "custom" | "generated" | "template";
    /** CoverLetterCreate */
    CoverLetterCreate: {
      /**
       * Name
       * @description Cover letter name
       */
      name?: string | null;
      /**
       * Content
       * @description Cover letter content
       */
      content?: string | null;
      /** @description Cover letter content type */
      content_type?: components["schemas"]["ContentType"] | null;
    };
    /** CoverLetterRead */
    CoverLetterRead: {
      /**
       * Name
       * @description Cover letter name
       */
      name?: string | null;
      /**
       * Content
       * @description Cover letter content
       */
      content?: string | null;
      /** @description Cover letter content type */
      content_type?: components["schemas"]["ContentType"] | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
    };
    /** CoverLetterUpdate */
    CoverLetterUpdate: {
      /**
       * Name
       * @description Cover letter name
       */
      name?: string | null;
      /**
       * Content
       * @description Cover letter content
       */
      content?: string | null;
      /** @description Cover letter content type */
      content_type?: components["schemas"]["ContentType"] | null;
    };
    /** EducationCreate */
    EducationCreate: {
      /**
       * University
       * @description University name
       */
      university?: string | null;
      /**
       * Degree
       * @description Degree name
       */
      degree?: string | null;
      /**
       * Gradepoint
       * @description Grade point
       */
      gradePoint?: string | null;
      /**
       * Activities
       * @description Activities involved
       */
      activities?: string | null;
      /**
       * Achievements
       * @description Achievements
       */
      achievements?: string | null;
      /**
       * Start Date
       * @description Start date of the education
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the education
       */
      end_date?: string | null;
    };
    /** EducationRead */
    EducationRead: {
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * University
       * @description University name
       */
      university?: string | null;
      /**
       * Degree
       * @description Degree name
       */
      degree?: string | null;
      /**
       * Gradepoint
       * @description Grade point
       */
      gradePoint?: string | null;
      /**
       * Activities
       * @description Activities involved
       */
      activities?: string | null;
      /**
       * Achievements
       * @description Achievements
       */
      achievements?: string | null;
      /**
       * Start Date
       * @description Start date of the education
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the education
       */
      end_date?: string | null;
    };
    /** EducationUpdate */
    EducationUpdate: {
      /**
       * University
       * @description University name
       */
      university?: string | null;
      /**
       * Degree
       * @description Degree name
       */
      degree?: string | null;
      /**
       * Gradepoint
       * @description Grade point
       */
      gradePoint?: string | null;
      /**
       * Activities
       * @description Activities involved
       */
      activities?: string | null;
      /**
       * Achievements
       * @description Achievements
       */
      achievements?: string | null;
      /**
       * Start Date
       * @description Start date of the education
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the education
       */
      end_date?: string | null;
    };
    /** ErrorModel */
    ErrorModel: {
      /** Detail */
      detail: string | {
        [key: string]: string;
      };
    };
    /** ExperienceCreate */
    ExperienceCreate: {
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Start Date
       * @description Start date of the experience
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the experience
       */
      end_date?: string | null;
      /**
       * Description
       * @description Description of the experience
       */
      description?: string | null;
      /**
       * Location
       * @description Location of the experience
       */
      location?: string | null;
      /**
       * Projects
       * @description Projects involved
       */
      projects?: string | null;
    };
    /** ExperienceRead */
    ExperienceRead: {
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Start Date
       * @description Start date of the experience
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the experience
       */
      end_date?: string | null;
      /**
       * Description
       * @description Description of the experience
       */
      description?: string | null;
      /**
       * Location
       * @description Location of the experience
       */
      location?: string | null;
      /**
       * Projects
       * @description Projects involved
       */
      projects?: string | null;
    };
    /** ExperienceUpdate */
    ExperienceUpdate: {
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Start Date
       * @description Start date of the experience
       */
      start_date?: string | null;
      /**
       * End Date
       * @description End date of the experience
       */
      end_date?: string | null;
      /**
       * Description
       * @description Description of the experience
       */
      description?: string | null;
      /**
       * Location
       * @description Location of the experience
       */
      location?: string | null;
      /**
       * Projects
       * @description Projects involved
       */
      projects?: string | null;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LeadCreate */
    LeadCreate: {
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Description
       * @description Job description
       */
      description?: string | null;
      /**
       * Location
       * @description Job location
       */
      location?: string | null;
      /**
       * Salary
       * @description Salary range
       */
      salary?: string | null;
      /**
       * Job Function
       * @description Job function
       */
      job_function?: string | null;
      /**
       * Industries
       * @description Industries involved
       */
      industries?: string | null;
      /**
       * Employment Type
       * @description Type of employment
       */
      employment_type?: string | null;
      /**
       * Seniority Level
       * @description Seniority level
       */
      seniority_level?: string | null;
      /**
       * Education Level
       * @description Required education level
       */
      education_level?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
      /**
       * Hiring Manager
       * @description Hiring manager
       */
      hiring_manager?: string | null;
      /** Url */
      url: string;
    };
    /** LeadRead */
    LeadRead: {
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Description
       * @description Job description
       */
      description?: string | null;
      /**
       * Location
       * @description Job location
       */
      location?: string | null;
      /**
       * Salary
       * @description Salary range
       */
      salary?: string | null;
      /**
       * Job Function
       * @description Job function
       */
      job_function?: string | null;
      /**
       * Industries
       * @description Industries involved
       */
      industries?: string | null;
      /**
       * Employment Type
       * @description Type of employment
       */
      employment_type?: string | null;
      /**
       * Seniority Level
       * @description Seniority level
       */
      seniority_level?: string | null;
      /**
       * Education Level
       * @description Required education level
       */
      education_level?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
      /**
       * Hiring Manager
       * @description Hiring manager
       */
      hiring_manager?: string | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * Url
       * @description Job posting URL
       */
      url?: string | null;
    };
    /** LeadUpdate */
    LeadUpdate: {
      /**
       * Title
       * @description Job title
       */
      title?: string | null;
      /**
       * Company
       * @description Company name
       */
      company?: string | null;
      /**
       * Description
       * @description Job description
       */
      description?: string | null;
      /**
       * Location
       * @description Job location
       */
      location?: string | null;
      /**
       * Salary
       * @description Salary range
       */
      salary?: string | null;
      /**
       * Job Function
       * @description Job function
       */
      job_function?: string | null;
      /**
       * Industries
       * @description Industries involved
       */
      industries?: string | null;
      /**
       * Employment Type
       * @description Type of employment
       */
      employment_type?: string | null;
      /**
       * Seniority Level
       * @description Seniority level
       */
      seniority_level?: string | null;
      /**
       * Education Level
       * @description Required education level
       */
      education_level?: string | null;
      /**
       * Notes
       * @description Additional notes
       */
      notes?: string | null;
      /**
       * Hiring Manager
       * @description Hiring manager
       */
      hiring_manager?: string | null;
    };
    /** LeadsPaginatedRead */
    LeadsPaginatedRead: {
      /** Leads */
      leads: components["schemas"]["LeadRead"][];
      pagination: components["schemas"]["Pagination"];
      /**
       * Total Count
       * @description Total number of leads, if pagination requested
       */
      total_count: number | null;
    };
    /** OrchestrationEventRead */
    OrchestrationEventRead: {
      /** @description Status */
      status?: components["schemas"]["OrchestrationEventStatusType"] | null;
      /**
       * Error Message
       * @description Error message, if any
       */
      error_message?: string | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
      /**
       * Job Name
       * @description Name of the ETL job
       */
      job_name?: string | null;
      /** @description Source URI */
      source_uri?: components["schemas"]["URI"] | null;
      /** @description Destination URI */
      destination_uri?: components["schemas"]["URI"] | null;
    };
    /**
     * OrchestrationEventStatusType
     * @enum {string}
     */
    OrchestrationEventStatusType: "pending" | "running" | "success" | "failure";
    /** Pagination */
    Pagination: {
      /**
       * Page
       * @description The page number
       * @default 1
       */
      page?: number;
      /**
       * Page Size
       * @description The number of items per page
       * @default 10
       */
      page_size?: number;
      /**
       * Request Count
       * @description Request a query for total count
       * @default false
       */
      request_count?: boolean;
    };
    /** ResumeCreate */
    ResumeCreate: {
      /**
       * Name
       * @description Resume name
       */
      name?: string | null;
      /**
       * Content
       * @description Resume content
       */
      content?: string | null;
      /** @description Resume content type */
      content_type?: components["schemas"]["ContentType"] | null;
    };
    /** ResumeRead */
    ResumeRead: {
      /**
       * Name
       * @description Resume name
       */
      name?: string | null;
      /**
       * Content
       * @description Resume content
       */
      content?: string | null;
      /** @description Resume content type */
      content_type?: components["schemas"]["ContentType"] | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
    };
    /** ResumeUpdate */
    ResumeUpdate: {
      /**
       * Name
       * @description Resume name
       */
      name?: string | null;
      /**
       * Content
       * @description Resume content
       */
      content?: string | null;
      /** @description Resume content type */
      content_type?: components["schemas"]["ContentType"] | null;
    };
    /** SkillCreate */
    SkillCreate: {
      /**
       * Name
       * @description Name of the skill
       */
      name?: string | null;
      /**
       * Category
       * @description Category of the skill
       */
      category?: string | null;
      /**
       * Yoe
       * @description Years of Experience
       */
      yoe?: number | null;
      /**
       * Subskills
       * @description Sub-Skills
       */
      subskills?: string | null;
    };
    /** SkillRead */
    SkillRead: {
      /**
       * Name
       * @description Name of the skill
       */
      name?: string | null;
      /**
       * Category
       * @description Category of the skill
       */
      category?: string | null;
      /**
       * Yoe
       * @description Years of Experience
       */
      yoe?: number | null;
      /**
       * Subskills
       * @description Sub-Skills
       */
      subskills?: string | null;
      /**
       * Id
       * Format: uuid4
       * @description The unique uuid4 record identifier.
       */
      id: string;
      /**
       * Created At
       * Format: date-time
       * @description The time the item was created
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       * @description The time the item was last updated
       */
      updated_at: string;
    };
    /** SkillUpdate */
    SkillUpdate: {
      /**
       * Name
       * @description Name of the skill
       */
      name?: string | null;
      /**
       * Category
       * @description Category of the skill
       */
      category?: string | null;
      /**
       * Yoe
       * @description Years of Experience
       */
      yoe?: number | null;
      /**
       * Subskills
       * @description Sub-Skills
       */
      subskills?: string | null;
    };
    /** URI */
    URI: {
      /** Name */
      name: string;
      type: components["schemas"]["URIType"];
    };
    /**
     * URIType
     * @enum {string}
     */
    URIType: "filepath" | "datalake" | "database" | "api";
    /** UserCreate */
    UserCreate: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Address Line 1
       * @description Address line 1
       */
      address_line_1?: string | null;
      /**
       * Address Line 2
       * @description Address line 2
       */
      address_line_2?: string | null;
      /**
       * City
       * @description City
       */
      city?: string | null;
      /**
       * State
       * @description State
       */
      state?: string | null;
      /**
       * Zip Code
       * @description Zip code
       */
      zip_code?: string | null;
      /**
       * Country
       * @description Country
       */
      country?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
      /**
       * Is Active
       * @default true
       */
      is_active?: boolean | null;
      /**
       * Is Superuser
       * @default false
       */
      is_superuser?: boolean | null;
      /**
       * Is Verified
       * @default false
       */
      is_verified?: boolean | null;
    };
    /** UserProfileRead */
    UserProfileRead: {
      /**
       * Skills
       * @description User's skills
       * @default []
       */
      skills?: components["schemas"]["SkillRead"][];
      /**
       * Experiences
       * @description User's professional experiences
       * @default []
       */
      experiences?: components["schemas"]["ExperienceRead"][];
      /**
       * Educations
       * @description User's educational background
       * @default []
       */
      educations?: components["schemas"]["EducationRead"][];
      /**
       * Certificates
       * @description User's certificates
       * @default []
       */
      certificates?: components["schemas"]["CertificateRead"][];
    };
    /** UserRead */
    UserRead: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Address Line 1
       * @description Address line 1
       */
      address_line_1?: string | null;
      /**
       * Address Line 2
       * @description Address line 2
       */
      address_line_2?: string | null;
      /**
       * City
       * @description City
       */
      city?: string | null;
      /**
       * State
       * @description State
       */
      state?: string | null;
      /**
       * Zip Code
       * @description Zip code
       */
      zip_code?: string | null;
      /**
       * Country
       * @description Country
       */
      country?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /**
       * Id
       * Format: uuid4
       */
      id: string;
      /**
       * Email
       * Format: email
       */
      email: string;
      /**
       * Is Active
       * @default true
       */
      is_active?: boolean;
      /**
       * Is Superuser
       * @default false
       */
      is_superuser?: boolean;
      /**
       * Is Verified
       * @default false
       */
      is_verified?: boolean;
    };
    /** UserUpdate */
    UserUpdate: {
      /**
       * First Name
       * @description First name
       */
      first_name?: string | null;
      /**
       * Last Name
       * @description Last name
       */
      last_name?: string | null;
      /**
       * Phone Number
       * @description Phone number
       */
      phone_number?: string | null;
      /**
       * Address Line 1
       * @description Address line 1
       */
      address_line_1?: string | null;
      /**
       * Address Line 2
       * @description Address line 2
       */
      address_line_2?: string | null;
      /**
       * City
       * @description City
       */
      city?: string | null;
      /**
       * State
       * @description State
       */
      state?: string | null;
      /**
       * Zip Code
       * @description Zip code
       */
      zip_code?: string | null;
      /**
       * Country
       * @description Country
       */
      country?: string | null;
      /**
       * Time Zone
       * @description Time zone
       */
      time_zone?: string | null;
      /** Password */
      password?: string | null;
      /** Email */
      email?: string | null;
      /** Is Active */
      is_active?: boolean | null;
      /** Is Superuser */
      is_superuser?: boolean | null;
      /** Is Verified */
      is_verified?: boolean | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Auth:Jwt.Login */
  auth_jwt_login_auth_jwt_login_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_auth_jwt_login_auth_jwt_login_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BearerResponse"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Auth:Jwt.Logout */
  auth_jwt_logout_auth_jwt_logout_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
    };
  };
  /** Register:Register */
  register_register_auth_register_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reset:Forgot Password */
  reset_forgot_password_auth_forgot_password_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_reset_forgot_password_auth_forgot_password_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reset:Reset Password */
  reset_reset_password_auth_reset_password_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_reset_reset_password_auth_reset_password_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Verify:Request-Token */
  verify_request_token_auth_request_verify_token_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_verify_request_token_auth_request_verify_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Verify:Verify */
  verify_verify_auth_verify_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Body_verify_verify_auth_verify_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Current User */
  users_current_user_users_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
    };
  };
  /** Users:Patch Current User */
  users_patch_current_user_users_me_patch: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:User */
  users_user_users__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Delete User */
  users_delete_user_users__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Users:Patch User */
  users_patch_user_users__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserRead"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorModel"];
        };
      };
      /** @description Missing token or inactive user. */
      401: {
        content: never;
      };
      /** @description Not a superuser. */
      403: {
        content: never;
      };
      /** @description The user does not exist. */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Profile */
  read_profile_users_me_profile_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileRead"];
        };
      };
    };
  };
  /**
   * Load Database
   * @description Loads the database with leads from the data lake.
   */
  load_database_leads_load_database_post: {
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": components["schemas"]["OrchestrationEventRead"];
        };
      };
    };
  };
  /** Read Leads */
  read_leads_leads__get: {
    parameters: {
      query?: {
        /** @description Page number starting from 1 */
        page?: number;
        /** @description Number of records per page */
        page_size?: number;
        /** @description Return total count of records */
        request_count?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LeadsPaginatedRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Lead */
  create_lead_leads__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeadCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Lead */
  read_lead_leads__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": components["schemas"]["LeadRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Lead */
  delete_lead_leads__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Lead */
  update_lead_leads__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeadUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LeadRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Purge Leads
   * @description Drops all leads records in the table.
   */
  purge_leads_leads_purge_delete: {
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /** Read Orch Events */
  read_orch_events_data_orchestration_events_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OrchestrationEventRead"][];
        };
      };
    };
  };
  /** Read Successful Orch Events */
  read_successful_orch_events_data_orchestration_events_success_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OrchestrationEventRead"][];
        };
      };
    };
  };
  /** Read Failed Orch Events */
  read_failed_orch_events_data_orchestration_events_failure_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OrchestrationEventRead"][];
        };
      };
    };
  };
  /** Read Orch Event */
  read_orch_event_data_orchestration_events__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      202: {
        content: {
          "application/json": components["schemas"]["OrchestrationEventRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Current User Contacts */
  get_current_user_contacts_contacts__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ContactRead"][];
        };
      };
    };
  };
  /** Create User Contact */
  create_user_contact_contacts__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ContactRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Contact */
  get_user_contact_contacts__contact_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ContactRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Contact */
  update_user_contact_contacts__contact_id__put: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ContactRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Contact */
  delete_user_contact_contacts__contact_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Current User Experiences */
  read_current_user_experiences_experiences__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ExperienceRead"][];
        };
      };
    };
  };
  /** Create User Experience */
  create_user_experience_experiences__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExperienceCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ExperienceRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Experience */
  read_user_experience_experiences__experience_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ExperienceRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Experience */
  update_user_experience_experiences__experience_id__put: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExperienceUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ExperienceRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Experience */
  delete_user_experience_experiences__experience_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Current User Skills */
  get_current_user_skills_skills__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SkillRead"][];
        };
      };
    };
  };
  /** Create User Skill */
  create_user_skill_skills__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["SkillRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Skill */
  get_user_skill_skills__skill_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SkillRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Skill */
  update_user_skill_skills__skill_id__put: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SkillRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Skill */
  delete_user_skill_skills__skill_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Generate User Cover Letter */
  generate_user_cover_letter_cover_letters_generate_post: {
    parameters: {
      query: {
        lead_id: string;
        /** @description Template ID for the cover letter */
        template_id?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Current User Cover Letters */
  get_current_user_cover_letters_cover_letters__get: {
    parameters: {
      query?: {
        /** @description Filter by content type */
        content_type?: components["schemas"]["ContentType"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create User Cover Letter */
  create_user_cover_letter_cover_letters__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CoverLetterCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Cover Letter By Id */
  get_cover_letter_by_id_cover_letters__cover_letter_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Cover Letter */
  delete_user_cover_letter_cover_letters__cover_letter_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Cover Letter */
  update_user_cover_letter_cover_letters__cover_letter_id__patch: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CoverLetterUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Current User Resumes */
  get_current_user_resumes_resumes__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResumeRead"][];
        };
      };
    };
  };
  /** Create User Resume */
  create_user_resume_resumes__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResumeCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ResumeRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Resume */
  get_user_resume_resumes__resume_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResumeRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Resume */
  delete_user_resume_resumes__resume_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Resume */
  update_user_resume_resumes__resume_id__patch: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResumeUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResumeRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Applications
   * @description Get all applications for the current user.
   */
  get_applications_applications__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApplicationRead"][];
        };
      };
    };
  };
  /** Create Application */
  create_application_applications__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApplicationCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ApplicationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Application */
  delete_application_applications__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Application */
  update_application_applications__id__patch: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApplicationUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApplicationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Application Resumes */
  get_application_resumes_applications__id__resumes_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResumeRead"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Resume To Application */
  add_resume_to_application_applications__id__resumes_post: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResumeCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ResumeRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Application Cover Letters */
  get_application_cover_letters_applications__id__cover_letters_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Cover Letter To Application */
  add_cover_letter_to_application_applications__id__cover_letters_post: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CoverLetterCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Generate Cover Letter For Application */
  generate_cover_letter_for_application_applications__id__cover_letters_generate_post: {
    parameters: {
      query?: {
        /** @description Template ID for cover letter generation */
        template_id?: string | null;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CoverLetterRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Current User Educations */
  read_current_user_educations_education__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["EducationRead"][];
        };
      };
    };
  };
  /** Create User Education */
  create_user_education_education__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["EducationCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["EducationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Education */
  read_user_education_education__education_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["EducationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Education */
  update_user_education_education__education_id__put: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EducationUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["EducationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Education */
  delete_user_education_education__education_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["EducationRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Current User Certificates */
  read_current_user_certificates_certificate__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CertificateRead"][];
        };
      };
    };
  };
  /** Create User Certificate */
  create_user_certificate_certificate__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CertificateCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CertificateRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Certificate */
  read_user_certificate_certificate__certificate_id__get: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CertificateRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Certificate */
  update_user_certificate_certificate__certificate_id__put: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CertificateUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CertificateRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Certificate */
  delete_user_certificate_certificate__certificate_id__delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CertificateRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Pong */
  pong_ping_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Root */
  root__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
